server:
  port: 8085

grpc:
  server:
    port: 8086

spring:
  application:
    name: rangiffler-geo
  datasource:
    hikari:
      connection-timeout: 20000
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 10000
      max-lifetime: 1000
      auto-commit: true
      connection-init-sql: SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    schemas: rangiffler-geo
    locations: classpath:db/migration/rangiffler-geo
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        format_sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: true
    generate-ddl: true
    open-in-view: false


logging:
  file:
    path: ./logs/rangiffler-geo
  level:
    root: INFO
    org.springframework.kafka: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: INFO
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.transaction: DEBUG
    org.springframework.boot.autoconfigure: INFO
    ru.sentidas.rangiffler: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
---
spring:
  config:
    activate:
      on-profile: 'local'
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  kafka:
    bootstrap-servers: 'localhost:9092'
    consumer:
      group-id: 'geo'
      auto-offset-reset: earliest
  datasource:
    url: 'jdbc:mysql://127.0.0.1:3306/rangiffler-geo?serverTimezone=UTC&createDatabaseIfNotExist=true'
    username: root
    password: root
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      timeout: 200ms

grpc:
  client:
    grpcUserdataClient:
      address: 'static://localhost:8087'
      negotiationType: PLAINTEXT
    grpcPhotoClient:
      address: 'static://localhost:8095'
      negotiationType: PLAINTEXT

rangiffler-geo:
  base-uri: 'http://127.0.0.1:8085'
rangiffler-userdata:
  base-uri: 'http://127.0.0.1:8088'
rangiffler-photo:
  base-uri: 'http://127.0.0.1:8094'

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://rangiffler-all-db:3306/rangiffler-geo?serverTimezone=UTC&createDatabaseIfNotExist=true
    username: root
    password: root
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
        group-id: 'geo'
        auto-offset-reset: earliest
  data:
    redis:
      host: redis-geo
      port: 6379
      timeout: 200ms

grpc:
  client:
    grpcUserdataClient:
      address: static://userdata:8087
      negotiationType: PLAINTEXT
    grpcPhotoClient:
      address: static://photo:8095
      negotiationType: PLAINTEXT

rangiffler-geo:
  base-uri: http://geo:8085
rangiffler-userdata:
  base-uri: http://userdata:8088
rangiffler-photo:
  base-uri: http://photo:8094