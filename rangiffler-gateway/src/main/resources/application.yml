server:
  port: 8081

oauth2:
  client-id: 'client'

spring:
  application:
    name: rangiffler-gateway
  graphql:
    graphiql:
      enabled: true
      props:
        resources:
          version: "2.4.7"
          query: default-query.graphql
        variables:
          editorTheme: "light"
      cdn:
        enabled: false
    schema:
      introspection:
        enabled: true
    observation:
      enabled: true

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.transaction: DEBUG
    ru.sentidas.rangiffler: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} trace=%X{trace_id} span=%X{span_id} - %msg%n"

rangiffler-userdata:
  client: grpc
rangiffler-geo:
  client: grpc

management:           # <--Micrometer Tracing
  tracing:
    enabled: true
    sampling:
      probability: 1.0

---
spring:
  config:
    activate:
      on-profile: local
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: 'http://127.0.0.1:9001'
  graphql:
    graphiql:
      enabled: true

grpc:
  client:
    grpcUserdataClient:
      address: 'static://localhost:8087'
      negotiationType: PLAINTEXT
      max-inbound-message-size: 10485760
    grpcGeoClient:
      address: 'static://localhost:8086'
      negotiationType: PLAINTEXT
    grpcPhotoClient:
      address: 'static://localhost:8095'
      negotiationType: PLAINTEXT
      max-inbound-message-size: 26214400

rangiffler-front:
  base-uri: 'http://127.0.0.1:3001'
rangiffler-gateway:
  base-uri: 'http://127.0.0.1:8081'
rangiffler-userdata:
  base-uri: 'http://127.0.0.1:8088'
rangiffler-geo:
  base-uri: 'http://127.0.0.1:8085'
rangiffler-photo:
  base-uri: 'http://127.0.0.1:8094'

minio:
  endpoint: http://127.0.0.1:9002   # gateway стартует локально, MinIO проброшен на 9002
  access-key: root
  secret-key: rootroot

app:
  public-base-url: http://127.0.0.1:${server.port}
  media:
    bucket: rangiffler-media
    cache-max-age-seconds: 31536000
    allowed-mime:
      - image/jpeg
      - image/png
      - image/gif
      - image/webp


---
spring:
  config:
    activate:
      on-profile: docker
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: 'http://auth.rangiffler.dc:9001'

grpc:
  client:
    grpcUserdataClient:
      address: static://userdata.rangiffler.dc:8087
      negotiationType: PLAINTEXT
      max-inbound-message-size: 10485760
    grpcGeoClient:
      address: static://geo.rangiffler.dc:8086
      negotiationType: PLAINTEXT
    grpcPhotoClient:
      address: static://photo.rangiffler.dc:8095
      negotiationType: PLAINTEXT
      max-inbound-message-size: 26214400

rangiffler-front:
  base-uri: 'http://frontend.rangiffler.dc'
rangiffler-gateway:
  base-uri: 'http://gateway.rangiffler.dc:8081'
rangiffler-userdata:
  base-uri: 'http://userdata.rangiffler.dc:8088'
rangiffler-geo:
  base-uri: 'http://geo.rangiffler.dc:8085'
rangiffler-photo:
  base-uri: 'http://photo.rangiffler.dc:8094'

minio:
  endpoint: http://minio:9000
  access-key: root
  secret-key: rootroot

app:
  # Внешний адрес для ссылок, которые увидит браузер.
  # Т.к. порт 8081 проброшен на хост, используется localhost.
  public-base-url: http://localhost:8081
  media:
    bucket: rangiffler-media
    cache-max-age-seconds: 31536000
    allowed-mime: [ image/jpeg, image/png, image/gif, image/webp ]
