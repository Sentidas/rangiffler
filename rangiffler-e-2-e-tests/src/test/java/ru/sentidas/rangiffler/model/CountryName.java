package ru.sentidas.rangiffler.model;

import java.text.Normalizer;
import java.util.*;

public enum CountryName {
    TOGO("Togo"),
    LAO_PEOPLES_DEMOCRATIC_REPUBLIC("Lao People`s Democratic Republic"),
    MAURITANIA("Mauritania"),
    NICARAGUA("Nicaragua"),
    LATVIA("Latvia"),
    OMAN("Oman"),
    AFGHANISTAN("Afghanistan"),
    CYPRUS("Cyprus"),
    BENIN("Benin"),
    ANTARCTICA("Antarctica"),
    CHINA("China"),
    COLOMBIA("Colombia"),
    CHRISTMAS_ISLAND("Christmas Island"),
    ANTIGUA_AND_BARBUDA("Antigua and Barbuda"),
    MONTSERRAT("Montserrat"),
    MOLDOVA_REPUBLIC_OF("Moldova, Republic of"),
    ZAMBIA("Zambia"),
    VIET_NAM("Viet Nam"),
    FRENCH_SOUTHERN_TERRITORIES("French Southern Territories"),
    CHAD("Chad"),
    MAYOTTE("Mayotte"),
    LEBANON("Lebanon"),
    LUXEMBOURG("Luxembourg"),
    MARTINIQUE("Martinique"),
    CZECH_REPUBLIC("Czech Republic"),
    UNITED_ARAB_EMIRATES("United Arab Emirates"),
    CAMEROON("Cameroon"),
    BURUNDI("Burundi"),
    ARGENTINA("Argentina"),
    AMERICAN_SAMOA("American Samoa"),
    BAHRAIN("Bahrain"),
    CHILE("Chile"),
    ANDORRA("Andorra"),
    NORTHERN_MARIANA_ISLANDS("Northern Mariana Islands"),
    LITHUANIA("Lithuania"),
    MADAGASCAR("Madagascar"),
    SAINT_LUCIA("Saint Lucia"),
    TURKEY("Turkey"),
    UKRAINE("Ukraine"),
    TUVALU("Tuvalu"),
    VIRGIN_ISLANDS_US("Virgin Islands, U.S."),
    MALTA("Malta"),
    NORWAY("Norway"),
    MONACO("Monaco"),
    SWITZERLAND("Switzerland"),
    ARUBA("Aruba"),
    BELIZE("Belize"),
    BERMUDA("Bermuda"),
    COTE_D_IVOIRE("Cote D`Ivoire"),
    MAURITIUS("Mauritius"),
    UNITED_STATES("United States"),
    TAIWAN_PROVINCE_OF_CHINA("Taiwan, Province of China"),
    YEMEN("Yemen"),
    MALAWI("Malawi"),
    NETHERLANDS("Netherlands"),
    LESOTHO("Lesotho"),
    BOLIVIA("Bolivia"),
    AUSTRIA("Austria"),
    COOK_ISLANDS("Cook Islands"),
    BELARUS("Belarus"),
    AUSTRALIA("Australia"),
    BRUNEI_DARUSSALAM("Brunei Darussalam"),
    MOROCCO("Morocco"),
    NEW_ZEALAND("New Zealand"),
    LIBERIA("Liberia"),
    MALDIVES("Maldives"),
    TURKS_AND_CAICOS_ISLANDS("Turks and Caicos Islands"),
    UGANDA("Uganda"),
    TRINIDAD_AND_TOBAGO("Trinidad and Tobago"),
    POLAND("Poland"),
    INDIA("India"),
    GEORGIA("Georgia"),
    GREECE("Greece"),
    SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS("South Georgia and the South Sandwich Islands"),
    GRENADA("Grenada"),
    BRITISH_INDIAN_OCEAN_TERRITORY("British Indian Ocean Territory"),
    HONG_KONG("Hong Kong"),
    KOREA_DEMOCRATIC_PEOPLES_REPUBLIC_OF("Korea, Democratic People`s Republic of"),
    KYRGYZSTAN("Kyrgyzstan"),
    SAINT_PIERRE_AND_MIQUELON("Saint Pierre and Miquelon"),
    EL_SALVADOR("El Salvador"),
    REUNION("Reunion"),
    SAUDI_ARABIA("Saudi Arabia"),
    SEYCHELLES("Seychelles"),
    SAO_TOME_AND_PRINCIPE("Sao Tome and Principe"),
    KENYA("Kenya"),
    KOREA_REPUBLIC_OF("Korea, Republic of"),
    FRENCH_GUIANA("French Guiana"),
    DJIBOUTI("Djibouti"),
    EQUATORIAL_GUINEA("Equatorial Guinea"),
    GUADELOUPE("Guadeloupe"),
    DENMARK("Denmark"),
    ISRAEL("Israel"),
    PITCAIRN("Pitcairn"),
    SOLOMON_ISLANDS("Solomon Islands"),
    PARAGUAY("Paraguay"),
    RUSSIAN_FEDERATION("Russian Federation"),
    KUWAIT("Kuwait"),
    DOMINICAN_REPUBLIC("Dominican Republic"),
    GUATEMALA("Guatemala"),
    UNITED_KINGDOM("United Kingdom"),
    GUAM("Guam"),
    HEARD_ISLAND_AND_MCDONALD_ISLANDS("Heard Island and McDonald Islands"),
    SINGAPORE("Singapore"),
    PAKISTAN("Pakistan"),
    SURINAME("Suriname"),
    SWEDEN("Sweden"),
    JAPAN("Japan"),
    GUINEA_BISSAU("Guinea-Bissau"),
    WESTERN_SAHARA("Western Sahara"),
    ALGERIA("Algeria"),
    GABON("Gabon"),
    FRANCE("France"),
    DOMINICA("Dominica"),
    HONDURAS("Honduras"),
    SUDAN("Sudan"),
    RWANDA("Rwanda"),
    PHILIPPINES("Philippines"),
    QATAR("Qatar"),
    PERU("Peru"),
    PUERTO_RICO("Puerto Rico"),
    SLOVENIA("Slovenia"),
    HAITI("Haiti"),
    SPAIN("Spain"),
    GREENLAND("Greenland"),
    GAMBIA("Gambia"),
    ERITREA("Eritrea"),
    FINLAND("Finland"),
    ESTONIA("Estonia"),
    SAINT_KITTS_AND_NEVIS("Saint Kitts and Nevis"),
    HUNGARY("Hungary"),
    IRAQ("Iraq"),
    CAYMAN_ISLANDS("Cayman Islands"),
    SAINT_HELENA("Saint Helena"),
    PALESTINIAN_TERRITORY_OCCUPIED("Palestinian Territory, Occupied"),
    FRENCH_POLYNESIA("French Polynesia"),
    SVALBARD_AND_JAN_MAYEN("Svalbard and Jan Mayen"),
    INDONESIA("Indonesia"),
    ICELAND("Iceland"),
    EGYPT("Egypt"),
    FALKLAND_ISLANDS_MALVINAS("Falkland Islands (Malvinas)"),
    FIJI("Fiji"),
    GUINEA("Guinea"),
    GUYANA("Guyana"),
    IRAN_ISLAMIC_REPUBLIC_OF("Iran, Islamic Republic of"),
    COMOROS("Comoros"),
    IRELAND("Ireland"),
    KAZAKHSTAN("Kazakhstan"),
    ROMANIA("Romania"),
    SLOVAKIA("Slovakia"),
    PAPUA_NEW_GUINEA("Papua New Guinea"),
    PORTUGAL("Portugal"),
    SOMALIA("Somalia"),
    CROATIA("Croatia"),
    KIRIBATI("Kiribati"),
    JAMAICA("Jamaica"),
    ECUADOR("Ecuador"),
    ETHIOPIA("Ethiopia"),
    FAROE_ISLANDS("Faroe Islands"),
    CAMBODIA("Cambodia"),
    SYRIAN_ARAB_REPUBLIC("Syrian Arab Republic"),
    SENEGAL("Senegal"),
    PALAU("Palau"),
    SIERRA_LEONE("Sierra Leone"),
    MICRONESIA_FEDERATED_STATES_OF("Micronesia, Federated States of"),
    GIBRALTAR("Gibraltar"),
    GERMANY("Germany"),
    GHANA("Ghana"),
    JORDAN("Jordan"),
    ITALY("Italy"),
    PANAMA("Panama"),
    SWAZILAND("Swaziland"),
    SAN_MARINO("San Marino"),
    TUNISIA("Tunisia"),
    MALI("Mali"),
    CONGO("Congo"),
    ANGOLA("Angola"),
    BHUTAN("Bhutan"),
    NETHERLANDS_ANTILLES("Netherlands Antilles"),
    BARBADOS("Barbados"),
    CENTRAL_AFRICAN_REPUBLIC("Central African Republic"),
    MYANMAR("Myanmar"),
    LIECHTENSTEIN("Liechtenstein"),
    NAMIBIA("Namibia"),
    MOZAMBIQUE("Mozambique"),
    TONGA("Tonga"),
    VIRGIN_ISLANDS_BRITISH("Virgin Islands, British"),
    VENEZUELA("Venezuela"),
    TANZANIA_UNITED_REPUBLIC_OF("Tanzania, United Republic of"),
    TURKMENISTAN("Turkmenistan"),
    MEXICO("Mexico"),
    NEW_CALEDONIA("New Caledonia"),
    MACAO("Macao"),
    SRI_LANKA("Sri Lanka"),
    CONGO_THE_DEMOCRATIC_REPUBLIC_OF_THE("Congo, the Democratic Republic of the"),
    ALBANIA("Albania"),
    BOTSWANA("Botswana"),
    COSTA_RICA("Costa Rica"),
    BOUVET_ISLAND("Bouvet Island"),
    ARMENIA("Armenia"),
    AZERBAIJAN("Azerbaijan"),
    BOSNIA_AND_HERZEGOVINA("Bosnia and Herzegovina"),
    MONGOLIA("Mongolia"),
    NIUE("Niue"),
    MALAYSIA("Malaysia"),
    TIMOR_LESTE("Timor-Leste"),
    SAMOA("Samoa"),
    THAILAND("Thailand"),
    NORFOLK_ISLAND("Norfolk Island"),
    LIBYAN_ARAB_JAMAHIRIYA("Libyan Arab Jamahiriya"),
    ANGUILLA("Anguilla"),
    BRAZIL("Brazil"),
    CAPE_VERDE("Cape Verde"),
    BELGIUM("Belgium"),
    CANADA("Canada"),
    BANGLADESH("Bangladesh"),
    BAHAMAS("Bahamas"),
    NIGERIA("Nigeria"),
    MACEDONIA_THE_FORMER_YUGOSLAV_REPUBLIC_OF("Macedonia, the Former Yugoslav Republic of"),
    NEPAL("Nepal"),
    HOLY_SEE_VATICAN_CITY_STATE("Holy See (Vatican City State)"),
    UZBEKISTAN("Uzbekistan"),
    UNITED_STATES_MINOR_OUTLYING_ISLANDS("United States Minor Outlying Islands"),
    TOKELAU("Tokelau"),
    SAINT_VINCENT_AND_THE_GRENADINES("Saint Vincent and the Grenadines"),
    ZIMBABWE("Zimbabwe"),
    NAURU("Nauru"),
    NIGER("Niger"),
    CUBA("Cuba"),
    BURKINA_FASO("Burkina Faso"),
    BULGARIA("Bulgaria"),
    COCOS_KEELING_ISLANDS("Cocos (Keeling) Islands"),
    MARSHALL_ISLANDS("Marshall Islands"),
    SOUTH_AFRICA("South Africa"),
    URUGUAY("Uruguay"),
    WALLIS_AND_FUTUNA("Wallis and Futuna"),
    VANUATU("Vanuatu"),
    TAJIKISTAN("Tajikistan");

    private final String label;

    CountryName(String label) {
        this.label = label;
    }

    public String label() {
        return label;
    }

    @Override
    public String toString() {
        return label;
    }

    // ---------- ВНУТРЕННЯЯ УТИЛИТА (нормализация строк) ----------
    private static String normalize(String s) {
        if (s == null) return "";
        String n = Normalizer.normalize(s, Normalizer.Form.NFD).replaceAll("\\p{M}+", "");
        n = n.replace('`', '\'');            // backtick -> апостроф
        n = n.replace('’', '\'');            // типографский апостроф
        n = n.replaceAll("[\"()]", " ");     // кавычки/скобки -> пробел
        n = n.toLowerCase(Locale.ROOT).trim();
        n = n.replaceAll("[^\\p{L}\\p{Nd}]+", " ");
        n = n.replaceAll("\\s+", " ");
        return n;
    }

    // ---------- Индексы ----------
    /** label/имя → enum (нужно, чтобы найти enum по вашей строке из справочника) */
    private static final Map<String, CountryName> BY_LABEL = new HashMap<>();

    static {
        for (CountryName c : values()) {
            BY_LABEL.put(normalize(c.label), c);
            BY_LABEL.put(normalize(c.name().replace('_', ' ')), c);
        }
    }

    /** Пары [UI-имя из вашего справочника, iso2-код] */
    private static final String[][] LABEL_CODE_PAIRS = new String[][]{
            {"Togo","tg"},
            {"Lao People`s Democratic Republic","la"},
            {"Mauritania","mr"},
            {"Nicaragua","ni"},
            {"Latvia","lv"},
            {"Oman","om"},
            {"Afghanistan","af"},
            {"Cyprus","cy"},
            {"Benin","bj"},
            {"Antarctica","aq"},
            {"China","cn"},
            {"Colombia","co"},
            {"Christmas Island","cx"},
            {"Antigua and Barbuda","ag"},
            {"Montserrat","ms"},
            {"Moldova, Republic of","md"},
            {"Zambia","zm"},
            {"Viet Nam","vn"},
            {"French Southern Territories","tf"},
            {"Chad","td"},
            {"Mayotte","yt"},
            {"Lebanon","lb"},
            {"Luxembourg","lu"},
            {"Martinique","mq"},
            {"Czech Republic","cz"},
            {"United Arab Emirates","ae"},
            {"Cameroon","cm"},
            {"Burundi","bi"},
            {"Argentina","ar"},
            {"American Samoa","as"},
            {"Bahrain","bh"},
            {"Chile","cl"},
            {"Andorra","ad"},
            {"Northern Mariana Islands","mp"},
            {"Lithuania","lt"},
            {"Madagascar","mg"},
            {"Saint Lucia","lc"},
            {"Turkey","tr"},
            {"Ukraine","ua"},
            {"Tuvalu","tv"},
            {"Virgin Islands, U.S.","vi"},
            {"Malta","mt"},
            {"Norway","no"},
            {"Monaco","mc"},
            {"Switzerland","ch"},
            {"Aruba","aw"},
            {"Belize","bz"},
            {"Bermuda","bm"},
            {"Cote D`Ivoire","ci"},
            {"Mauritius","mu"},
            {"United States","us"},
            {"Taiwan, Province of China","tw"},
            {"Yemen","ye"},
            {"Malawi","mw"},
            {"Netherlands","nl"},
            {"Lesotho","ls"},
            {"Bolivia","bo"},
            {"Austria","at"},
            {"Cook Islands","ck"},
            {"Belarus","by"},
            {"Australia","au"},
            {"Brunei Darussalam","bn"},
            {"Morocco","ma"},
            {"New Zealand","nz"},
            {"Liberia","lr"},
            {"Maldives","mv"},
            {"Turks and Caicos Islands","tc"},
            {"Uganda","ug"},
            {"Trinidad and Tobago","tt"},
            {"Poland","pl"},
            {"India","in"},
            {"Georgia","ge"},
            {"Greece","gr"},
            {"South Georgia and the South Sandwich Islands","gs"},
            {"Grenada","gd"},
            {"British Indian Ocean Territory","io"},
            {"Hong Kong","hk"},
            {"Korea, Democratic People`s Republic of","kp"},
            {"Kyrgyzstan","kg"},
            {"Saint Pierre and Miquelon","pm"},
            {"El Salvador","sv"},
            {"Reunion","re"},
            {"Saudi Arabia","sa"},
            {"Seychelles","sc"},
            {"Sao Tome and Principe","st"},
            {"Kenya","ke"},
            {"Korea, Republic of","kr"},
            {"French Guiana","gf"},
            {"Djibouti","dj"},
            {"Equatorial Guinea","gq"},
            {"Guadeloupe","gp"},
            {"Denmark","dk"},
            {"Israel","il"},
            {"Pitcairn","pn"},
            {"Solomon Islands","sb"},
            {"Paraguay","py"},
            {"Russian Federation","ru"},
            {"Kuwait","kw"},
            {"Dominican Republic","do"},
            {"Guatemala","gt"},
            {"United Kingdom","gb"},
            {"Guam","gu"},
            {"Heard Island and McDonald Islands","hm"},
            {"Singapore","sg"},
            {"Pakistan","pk"},
            {"Suriname","sr"},
            {"Sweden","se"},
            {"Japan","jp"},
            {"Guinea-Bissau","gw"},
            {"Western Sahara","eh"},
            {"Algeria","dz"},
            {"Gabon","ga"},
            {"France","fr"},
            {"Dominica","dm"},
            {"Honduras","hn"},
            {"Sudan","sd"},
            {"Rwanda","rw"},
            {"Philippines","ph"},
            {"Qatar","qa"},
            {"Peru","pe"},
            {"Puerto Rico","pr"},
            {"Slovenia","si"},
            {"Haiti","ht"},
            {"Spain","es"},
            {"Greenland","gl"},
            {"Gambia","gm"},
            {"Eritrea","er"},
            {"Finland","fi"},
            {"Estonia","ee"},
            {"Saint Kitts and Nevis","kn"},
            {"Hungary","hu"},
            {"Iraq","iq"},
            {"Cayman Islands","ky"},
            {"Saint Helena","sh"},
            {"Palestinian Territory, Occupied","ps"},
            {"French Polynesia","pf"},
            {"Svalbard and Jan Mayen","sj"},
            {"Indonesia","id"},
            {"Iceland","is"},
            {"Egypt","eg"},
            {"Falkland Islands (Malvinas)","fk"},
            {"Fiji","fj"},
            {"Guinea","gn"},
            {"Guyana","gy"},
            {"Iran, Islamic Republic of","ir"},
            {"Comoros","km"},
            {"Ireland","ie"},
            {"Kazakhstan","kz"},
            {"Romania","ro"},
            {"Slovakia","sk"},
            {"Papua New Guinea","pg"},
            {"Portugal","pt"},
            {"Somalia","so"},
            {"Croatia","hr"},
            {"Kiribati","ki"},
            {"Jamaica","jm"},
            {"Ecuador","ec"},
            {"Ethiopia","et"},
            {"Faroe Islands","fo"},
            {"Cambodia","kh"},
            {"Syrian Arab Republic","sy"},
            {"Senegal","sn"},
            {"Palau","pw"},
            {"Sierra Leone","sl"},
            {"Micronesia, Federated States of","fm"},
            {"Gibraltar","gi"},
            {"Germany","de"},
            {"Ghana","gh"},
            {"Jordan","jo"},
            {"Italy","it"},
            {"Panama","pa"},
            {"Swaziland","sz"},
            {"San Marino","sm"},
            {"Tunisia","tn"},
            {"Mali","ml"},
            {"Congo","cg"},
            {"Angola","ao"},
            {"Bhutan","bt"},
            {"Netherlands Antilles","an"},
            {"Barbados","bb"},
            {"Central African Republic","cf"},
            {"Myanmar","mm"},
            {"Liechtenstein","li"},
            {"Namibia","na"},
            {"Mozambique","mz"},
            {"Tonga","to"},
            {"Virgin Islands, British","vg"},
            {"Venezuela","ve"},
            {"Tanzania, United Republic of","tz"},
            {"Turkmenistan","tm"},
            {"Mexico","mx"},
            {"New Caledonia","nc"},
            {"Macao","mo"},
            {"Sri Lanka","lk"},
            {"Congo, the Democratic Republic of the","cd"},
            {"Albania","al"},
            {"Botswana","bw"},
            {"Costa Rica","cr"},
            {"Bouvet Island","bv"},
            {"Armenia","am"},
            {"Azerbaijan","az"},
            {"Bosnia and Herzegovina","ba"},
            {"Mongolia","mn"},
            {"Niue","nu"},
            {"Malaysia","my"},
            {"Timor-Leste","tl"},
            {"Samoa","ws"},
            {"Thailand","th"},
            {"Norfolk Island","nf"},
            {"Libyan Arab Jamahiriya","ly"},
            {"Anguilla","ai"},
            {"Brazil","br"},
            {"Cape Verde","cv"},
            {"Belgium","be"},
            {"Canada","ca"},
            {"Bangladesh","bd"},
            {"Bahamas","bs"},
            {"Nigeria","ng"},
            {"Macedonia, the Former Yugoslav Republic of","mk"},
            {"Nepal","np"},
            {"Holy See (Vatican City State)","va"},
            {"Uzbekistan","uz"},
            {"United States Minor Outlying Islands","um"},
            {"Tokelau","tk"},
            {"Saint Vincent and the Grenadines","vc"},
            {"Zimbabwe","zw"},
            {"Nauru","nr"},
            {"Niger","ne"},
            {"Cuba","cu"},
            {"Burkina Faso","bf"},
            {"Bulgaria","bg"},
            {"Cocos (Keeling) Islands","cc"},
            {"Marshall Islands","mh"},
            {"South Africa","za"},
            {"Uruguay","uy"},
            {"Wallis and Futuna","wf"},
            {"Vanuatu","vu"},
            {"Tajikistan","tj"}
    };

    /** code → enum */
    private static final Map<String, CountryName> BY_CODE = new HashMap<>();

    static {
        // 1) уже построен BY_LABEL — используем его, чтобы найти enum по вашему label
        for (String[] pair : LABEL_CODE_PAIRS) {
            String label = pair[0];
            String code  = pair[1];
            CountryName found = BY_LABEL.get(normalize(label));
            if (found != null) {
                BY_CODE.put(code.toUpperCase(Locale.ROOT), found);
            }
        }
    }

    // ---------- ПУБЛИЧНЫЕ МЕТОДЫ ДЛЯ ТЕСТОВ ----------
    /** Получить enum по ISO-коду (alpha-2). Бросит IAE, если код не найден. */
    public static CountryName fromCode(String alpha2) {
        if (alpha2 == null || alpha2.isBlank()) {
            throw new IllegalArgumentException("Country code must not be null/blank");
        }
        CountryName c = BY_CODE.get(alpha2.toUpperCase(Locale.ROOT));
        if (c == null) {
            throw new IllegalArgumentException("Unknown country code: " + alpha2);
        }
        return c;
    }

    /** Удобный шорткат: вернуть отображаемое имя по ISO-коду. */
    public static String labelByCode(String alpha2) {
        return fromCode(alpha2).label();
    }

    // вернёт все доступные ISO2-коды (alpha-2)
    public static List<String> allCodes() {
        return new ArrayList<>(BY_CODE.keySet());
    }

    // вернёт случайный ISO2-код (alpha-2)
    public static String randomCode() {
        Random random = new Random();
        return allCodes().get(random.nextInt(allCodes().size()));
    }
}
