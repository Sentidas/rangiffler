plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'com.google.cloud.tools.jib' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.sentidas'
version = '0.0.1-SNAPSHOT'
description = 'rangiffler-event-log'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':rangiffler-events-common')

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation "org.springframework.kafka:spring-kafka:3.3.2"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}


sourceSets {
    main {
        java {
            srcDir('src/main/java')
        }
    }
}

jib {
    container {
        jvmFlags = ["-Dspring.profiles.active=${System.env.PROFILE}"]
        environment = [
                'VAULT_TOKEN': "${System.env.VAULT_TOKEN}".toString(),
                'TZ'         : 'Europe/Moscow'
        ]
        creationTime = 'USE_CURRENT_TIMESTAMP'
        labels = [
                'maintainer': 'Sentidas',
                'version'   : "${project.version}".toString()
        ]
    }
    from {
        image = "${project.ext.dockerImage}"
        platforms {
            platform {
                architecture = "${project.ext.dockerArch}"
                os = 'linux'
            }
        }
    }
    to {
        image = "${project.ext.dockerHubName}/${project.name}-${System.env.PROFILE}"
        tags = ['latest', "${project.version}"]
    }
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test



tasks.named('test') {
    useJUnitPlatform()
}
